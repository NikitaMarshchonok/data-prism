# test_ml_predictor.py

import pandas as pd
from src.ml_predictor import predict_target

# –ó–∞–≥—Ä—É–∑–∏–º —Ç–µ—Å—Ç–æ–≤—ã–π CSV (–º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–≤–æ–π)
df = pd.read_csv("data/uploads/latest_uploaded.csv")  # –∏–ª–∏ –ø–æ–¥—Å—Ç–∞–≤—å –ø—É—Ç—å –∫ —Å–≤–æ–µ–º—É —Ñ–∞–π–ª—É

# –í—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏
result = predict_target(df)

# –í—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
print("üéØ –¶–µ–ª–µ–≤–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è:", result.get("target_col"))
print("üìä –ú–µ—Ç—Ä–∏–∫–∞:", result.get("metric"))

# –°–æ—Ö—Ä–∞–Ω–∏–º –≥—Ä–∞—Ñ–∏–∫ –ø—Ä–∏–∑–Ω–∞–∫–æ–≤
if result.get("feature_importance_plot"):
    with open("feature_importance.png", "wb") as f:
        import base64
        f.write(base64.b64decode(result["feature_importance_plot"].split(",")[1]))
    print("‚úÖ –ì—Ä–∞—Ñ–∏–∫ –≤–∞–∂–Ω–æ—Å—Ç–∏ –ø—Ä–∏–∑–Ω–∞–∫–æ–≤ —Å–æ—Ö—Ä–∞–Ω—ë–Ω –∫–∞–∫ feature_importance.png")
else:
    print("‚ùå –ì—Ä–∞—Ñ–∏–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω.")
